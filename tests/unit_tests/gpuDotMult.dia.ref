// =============================================================================
// Scilab ( http://www.scilab.org/ ), This file is part of Scilab
// Copyright (C) Scilab Enterprises - 2013 - Cedric Delamarre
//
//  This file is distributed under the same license as the Scilab package.
// =============================================================================
A = rand(3,2);
B = rand(3,2);
// ------------- Check the first option -------------
cpuRes = A .* B;
d = gpuDotMult(A, B);
h = gpuGetData(d);
gpuFree(d);
assert_checkalmostequal(cpuRes, h, %eps, [], "matrix");
// ------------- Real/Complex -------------
ca = rand(3,4) + %i * rand(3,4);
cb = 2 * rand(3,4) + %i * 3 * rand(3,4);
c  = rand(3,4);
d  = 2 * rand(3,4);
gpu = gpuDotMult(2,3);
assert_checkalmostequal(gpuGetData(gpu), (2.*3), %eps, [], "matrix");
gpuFree(gpu);
gpu = gpuDotMult(c,3);
assert_checkalmostequal(gpuGetData(gpu), (c.*3), %eps, [], "matrix");
gpuFree(gpu);
gpu = gpuDotMult(2,d);
assert_checkalmostequal(gpuGetData(gpu), (2.*d), %eps, [], "matrix");
gpuFree(gpu);
gpu = gpuDotMult(c,d);
assert_checkalmostequal(gpuGetData(gpu), (c.*d), %eps, [], "matrix");
gpuFree(gpu);
gpu = gpuDotMult(2*%i,3*%i);
assert_checkalmostequal(gpuGetData(gpu), (2*%i.*3*%i), %eps, [], "matrix");
gpuFree(gpu);
gpu = gpuDotMult(ca,3*%i);
assert_checkalmostequal(gpuGetData(gpu), (ca.*3*%i), %eps, [], "matrix");
gpuFree(gpu);
gpu = gpuDotMult(2*%i,cb);
assert_checkalmostequal(gpuGetData(gpu), (2*%i.*cb), %eps, [], "matrix");
gpuFree(gpu);
gpu = gpuDotMult(ca,cb);
assert_checkalmostequal(gpuGetData(gpu), (ca.*cb), %eps, [], "matrix");
gpuFree(gpu);
gpu = gpuDotMult(2,3*%i);
assert_checkalmostequal(gpuGetData(gpu), (2.*3*%i), %eps, [], "matrix");
gpuFree(gpu);
gpu = gpuDotMult(c,3*%i);
assert_checkalmostequal(gpuGetData(gpu), (c.*3*%i), %eps, [], "matrix");
gpuFree(gpu);
gpu = gpuDotMult(2,cb);
assert_checkalmostequal(gpuGetData(gpu), (2.*cb), %eps, [], "matrix");
gpuFree(gpu);
gpu = gpuDotMult(c,cb);
assert_checkalmostequal(gpuGetData(gpu), (c.*cb), %eps, [], "matrix");
gpuFree(gpu);
gpu = gpuDotMult(2*%i,3);
assert_checkalmostequal(gpuGetData(gpu), (2*%i.*3), %eps, [], "matrix");
gpuFree(gpu);
gpu = gpuDotMult(ca,3);
assert_checkalmostequal(gpuGetData(gpu), (ca.*3), %eps, [], "matrix");
gpuFree(gpu);
gpu = gpuDotMult(2*%i,d);
assert_checkalmostequal(gpuGetData(gpu), (2*%i.*d), %eps, [], "matrix");
gpuFree(gpu);
gpu = gpuDotMult(ca,d);
assert_checkalmostequal(gpuGetData(gpu), (ca.*d), %eps, [], "matrix");
gpuFree(gpu);
